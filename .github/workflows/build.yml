name: Build

on:
  push:
    branches:
      - "master"
    paths-ignore:
      - "**.md"
  workflow_dispatch:

jobs:

  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos:
          - linux
        goarch:
          - amd64
          - arm64
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Log in to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build & Push
        uses: docker/build-push-action@v2
        with:
          context: ./
          push: true
          no-cache: true
          build-args: |
            GOOS=${{ matrix.goos }}
            GOARCH=${{ matrix.goarch }}
          tags: |
            ghcr.io/zekrotja/dcdl:${{ matrix.goarch }}

  frontend:
    name: Build Frontend Artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Set up NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install dependencies
        working-directory: web
        run: yarn
      - name: Build Web App
        working-directory: web
        run: yarn run build
      - name: Upload Artifcats
        uses: actions/upload-artifact@v2
        with:
          name: frontend
          path: web/dist
          retention-days: 1

  backend:
    name: Build Backend Artifacts
    runs-on: ubuntu-latest
    needs:
      - frontend
    strategy:
      matrix:
        goos:
          - linux
          - windows
          - darwin
        goarch:
          - amd64
          - arm64
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: '1.18rc1'
      - name: Check out code
        uses: actions/checkout@v2
      - name: Retrieve frontend files
        uses: actions/download-artifact@v2
        with:
          name: frontend
          path: internal/embedded/webdist
      - name: Get dependencies
        run: go get -v ./...
      - name: Build Backend (${{ matrix.goos }}-${{ matrix.goarch }})
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: go build -o ./bin/webwol-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/webwol/main.go
      - name: Rename Windows Binary
        if: ${{ matrix.goos == 'windows' }}
        env:
          FNAME: ./bin/webwol-${{ matrix.goos }}-${{ matrix.goarch }}
        run: mv ${{ env.FNAME }} ${{ env.FNAME }}.exe
      - name: Upload Artifcats
        uses: actions/upload-artifact@v2
        with:
          name: backend
          path: bin/